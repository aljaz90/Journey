[{"F:\\Projekti\\Journey\\front-end\\src\\index.js":"1","F:\\Projekti\\Journey\\front-end\\src\\App.js":"2","F:\\Projekti\\Journey\\front-end\\src\\serviceWorker.js":"3","F:\\Projekti\\Journey\\front-end\\src\\Utils.js":"4","F:\\Projekti\\Journey\\front-end\\src\\containers\\Auth.js":"5","F:\\Projekti\\Journey\\front-end\\src\\containers\\Account.js":"6","F:\\Projekti\\Journey\\front-end\\src\\containers\\Layout.js":"7","F:\\Projekti\\Journey\\front-end\\src\\containers\\NotificationSystem.js":"8","F:\\Projekti\\Journey\\front-end\\src\\components\\Layout\\Logo.js":"9","F:\\Projekti\\Journey\\front-end\\src\\components\\IonIcons\\IonIcon.js":"10","F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\Button.js":"11","F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\ImageSelector.js":"12","F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\Form.js":"13","F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\Switch.js":"14","F:\\Projekti\\Journey\\front-end\\src\\components\\Notifications\\Loader.js":"15","F:\\Projekti\\Journey\\front-end\\src\\components\\Notifications\\Toast.js":"16","F:\\Projekti\\Journey\\front-end\\src\\components\\Notifications\\Alert.js":"17","F:\\Projekti\\Journey\\front-end\\src\\components\\Animations\\EzAnime.js":"18","F:\\Projekti\\Journey\\front-end\\src\\components\\Animations\\EzAnimate.js":"19","F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\Checkbox.js":"20","F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\Dropdown.js":"21","F:\\Projekti\\Journey\\front-end\\src\\components\\IonIcons\\icons.js":"22","F:\\Projekti\\Journey\\front-end\\src\\components\\Utils\\OutsideClick.js":"23","F:\\Projekti\\Journey\\front-end\\src\\components\\Map\\MapChart.js":"24","F:\\Projekti\\Journey\\front-end\\src\\components\\Utils\\Loader.js":"25","F:\\Projekti\\Journey\\front-end\\src\\containers\\Home\\Home.js":"26","F:\\Projekti\\Journey\\front-end\\src\\containers\\Home\\Sidebar.js":"27","F:\\Projekti\\Journey\\front-end\\src\\containers\\Home\\AccountDropdown.js":"28","F:\\Projekti\\Journey\\front-end\\src\\components\\Map\\MapEvents.js":"29","F:\\Projekti\\Journey\\front-end\\src\\containers\\Home\\Destination.js":"30","F:\\Projekti\\Journey\\front-end\\src\\containers\\Trip\\Trip.js":"31","F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\CalendarInput.js":"32","F:\\Projekti\\Journey\\front-end\\src\\components\\Utils\\Calendar.js":"33","F:\\Projekti\\Journey\\front-end\\src\\Countries.js":"34","F:\\Projekti\\Journey\\front-end\\src\\containers\\Trip\\CountryInfo.js":"35","F:\\Projekti\\Journey\\front-end\\src\\components\\Utils\\Info.js":"36","F:\\Projekti\\Journey\\front-end\\src\\containers\\Home\\TripGeneration.js":"37","F:\\Projekti\\Journey\\front-end\\src\\containers\\Destinations\\Destinations.js":"38","F:\\Projekti\\Journey\\front-end\\src\\containers\\Destinations\\AddDestinationPopup.js":"39"},{"size":662,"mtime":1601133577751,"results":"40","hashOfConfig":"41"},{"size":5615,"mtime":1612197847209,"results":"42","hashOfConfig":"41"},{"size":5086,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":5864,"mtime":1612114626320,"results":"44","hashOfConfig":"41"},{"size":23862,"mtime":1609841227977,"results":"45","hashOfConfig":"41"},{"size":9548,"mtime":1609773036424,"results":"46","hashOfConfig":"41"},{"size":5179,"mtime":1611079212567,"results":"47","hashOfConfig":"41"},{"size":1959,"mtime":1608112605199,"results":"48","hashOfConfig":"41"},{"size":414,"mtime":1609252012395,"results":"49","hashOfConfig":"41"},{"size":632,"mtime":1608111762479,"results":"50","hashOfConfig":"41"},{"size":1430,"mtime":1609858142362,"results":"51","hashOfConfig":"41"},{"size":9560,"mtime":1609261932256,"results":"52","hashOfConfig":"41"},{"size":12884,"mtime":1612096133213,"results":"53","hashOfConfig":"41"},{"size":2274,"mtime":1608111750684,"results":"54","hashOfConfig":"41"},{"size":538,"mtime":1608111769639,"results":"55","hashOfConfig":"41"},{"size":348,"mtime":1608111769640,"results":"56","hashOfConfig":"41"},{"size":2762,"mtime":1608111769638,"results":"57","hashOfConfig":"41"},{"size":2473,"mtime":1608111729231,"results":"58","hashOfConfig":"41"},{"size":2694,"mtime":1608111729230,"results":"59","hashOfConfig":"41"},{"size":1087,"mtime":1608111750673,"results":"60","hashOfConfig":"41"},{"size":7852,"mtime":1610987579509,"results":"61","hashOfConfig":"41"},{"size":753865,"mtime":1612191849669,"results":"62","hashOfConfig":"41"},{"size":1171,"mtime":1608111781931,"results":"63","hashOfConfig":"41"},{"size":4322,"mtime":1612198394916,"results":"64","hashOfConfig":"41"},{"size":391,"mtime":1609676135175,"results":"65","hashOfConfig":"41"},{"size":13192,"mtime":1612181020404,"results":"66","hashOfConfig":"41"},{"size":8910,"mtime":1611997547283,"results":"67","hashOfConfig":"41"},{"size":1177,"mtime":1612168628521,"results":"68","hashOfConfig":"41"},{"size":691,"mtime":1612196504101,"results":"69","hashOfConfig":"41"},{"size":3233,"mtime":1612005361152,"results":"70","hashOfConfig":"41"},{"size":8613,"mtime":1612008727823,"results":"71","hashOfConfig":"41"},{"size":8933,"mtime":1612092540972,"results":"72","hashOfConfig":"41"},{"size":7374,"mtime":1610987660837,"results":"73","hashOfConfig":"41"},{"size":16696,"mtime":1611081794364,"results":"74","hashOfConfig":"41"},{"size":2471,"mtime":1612009719326,"results":"75","hashOfConfig":"41"},{"size":1148,"mtime":1612009771313,"results":"76","hashOfConfig":"41"},{"size":2718,"mtime":1612113237894,"results":"77","hashOfConfig":"41"},{"size":5100,"mtime":1612198368725,"results":"78","hashOfConfig":"41"},{"size":2984,"mtime":1612196289151,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"6qbq2n",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Projekti\\Journey\\front-end\\src\\index.js",[],["160","161"],"F:\\Projekti\\Journey\\front-end\\src\\App.js",[],"F:\\Projekti\\Journey\\front-end\\src\\serviceWorker.js",[],"F:\\Projekti\\Journey\\front-end\\src\\Utils.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\Auth.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\Account.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\Layout.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\NotificationSystem.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Layout\\Logo.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\IonIcons\\IonIcon.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\Button.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\ImageSelector.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\Form.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\Switch.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Notifications\\Loader.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Notifications\\Toast.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Notifications\\Alert.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Animations\\EzAnime.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Animations\\EzAnimate.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\Checkbox.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\Dropdown.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\IonIcons\\icons.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Utils\\OutsideClick.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Map\\MapChart.js",["162"],"F:\\Projekti\\Journey\\front-end\\src\\components\\Utils\\Loader.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\Home\\Home.js",["163","164"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Logo } from '../../components/Layout/Logo';\r\nimport { Dropdown } from '../../components/Forms/Dropdown';\r\nimport { MapChart } from '../../components/Map/MapChart';\r\nimport { daysBetween, isEmpty, shuffleArray } from '../../Utils';\r\nimport { Loader } from '../../components/Utils/Loader';\r\nimport { IonIcon } from '../../components/IonIcons/IonIcon';\r\nimport { Sidebar } from './Sidebar';\r\nimport { AccountDropdown } from './AccountDropdown';\r\nimport { TripGeneration } from './TripGeneration';\r\nimport { Button } from '../../components/Forms/Button';\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedTrip: null,\r\n            autosaveTimeout: null,\r\n            center: { lat: 51.505, lng: 0 },\r\n            updatedStopovers: [],\r\n            showingGeneration: false\r\n        }\r\n\r\n        this.mapSelectionDropdown = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.autosaveTimeout) {\r\n            clearTimeout(this.state.autosaveTimeout);\r\n        }\r\n    }\r\n\r\n    addCustomTrip = async () => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n\r\n            let res = await axios.post(\"http://localhost:4000/api/trip/new\", {}, config);\r\n\r\n            this.props.showNotification({\r\n                type: \"toast\",\r\n                contentType: \"success\",\r\n                text: \"Trip successfully created\",\r\n                time: 1.5\r\n            });\r\n\r\n            this.props.setTrips([...this.props.trips, res.data], () => {\r\n                this.setState({...this.state, selectedTrip: res.data});\r\n            });\r\n\r\n        } \r\n        catch (err) {\r\n            this.props.showNotification({\r\n                type: \"toast\",\r\n                contentType: \"error\",\r\n                text: \"An error occured while trying to create a trip\",\r\n                time: 2.5\r\n            });\r\n            console.error(\"An error occured while trying to create a new trip\");\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    handleDragMarker = (latlong, stopoverId) => {\r\n        if (this.state.autosaveTimeout) {\r\n            clearTimeout(this.state.autosaveTimeout);\r\n        }\r\n\r\n        let trip = {...this.state.selectedTrip};\r\n        let index = trip.stopovers.findIndex(el => el._id === stopoverId);\r\n\r\n        trip.stopovers[index].lat = latlong.lat;\r\n        trip.stopovers[index].long = latlong.lng;\r\n\r\n        this.setState({...this.state, updatedStopovers: this.state.updatedStopovers.includes(stopoverId) ? this.state.updatedStopovers : [...this.state.updatedStopovers, stopoverId], selectedTrip: trip, autosaveTimeout: setTimeout(() => this.saveChanges(), 1000)});\r\n    };\r\n\r\n    handleTripChange = (key, value) => {\r\n        if (this.state.autosaveTimeout) {\r\n            clearTimeout(this.state.autosaveTimeout);\r\n        }\r\n\r\n        let trip = {...this.state.selectedTrip};\r\n        let updatedStopovers = [...this.state.updatedStopovers];\r\n\r\n        if (key === \"stopover\") {\r\n            let stopoverIndex = trip.stopovers.findIndex(el => el._id === value._id);\r\n\r\n            if ([\"lat\", \"long\"].includes(value.key)) {\r\n                if (isNaN(value.value)) {\r\n                    return;\r\n                }\r\n\r\n                value.value = Number.parseFloat(value.value);\r\n            }\r\n\r\n            trip.stopovers[stopoverIndex][value.key] = value.value;\r\n            if (!updatedStopovers.includes(value._id)) {\r\n                updatedStopovers.push(value._id);\r\n            }\r\n        }\r\n        else {\r\n            trip[key] = value;\r\n        }\r\n\r\n        this.setState({...this.state, updatedStopovers: updatedStopovers, selectedTrip: trip, autosaveTimeout: setTimeout(() => this.saveChanges(), 2000)});\r\n    };\r\n\r\n    handleAddDestination = async () => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const body = {\r\n            lat: this.state.center.lat,\r\n            long: this.state.center.lng\r\n        };\r\n\r\n        try {\r\n            let res = await axios.post(`http://localhost:4000/api/trip/${this.state.selectedTrip._id}/stopover/new`, body, config);\r\n\r\n            let stopover = res.data.stopover;\r\n            let segment = res.data.segment;\r\n\r\n            let segments = [...this.state.selectedTrip.segments];\r\n\r\n            if (segment) {\r\n                segments.push(segment);\r\n            }\r\n\r\n            let selectedTrip = { ...this.state.selectedTrip, stopovers: [...this.state.selectedTrip.stopovers, stopover], segments: segments };\r\n            let trip = { ...this.props.trips.find(el => el._id === selectedTrip._id), stopovers: [...this.state.selectedTrip.stopovers, stopover], segments: segments };\r\n\r\n            this.setState({...this.state, selectedTrip: selectedTrip});\r\n            this.props.setTrip(trip);\r\n        }\r\n        catch (err) {\r\n            this.props.showNotification({\r\n                type: \"toast\",\r\n                contentType: \"error\",\r\n                text: \"An error occured while trying to add a destination\",\r\n                time: 2.5\r\n            });\r\n            console.error(\"An error occured while trying to add a destination\");\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    getUpdatedStopovers = updatedStopovers => {\r\n        let stopovers = [];\r\n\r\n        for (let stopoverId of updatedStopovers) {\r\n            let stopover = this.state.selectedTrip.stopovers.find(el => el._id === stopoverId);\r\n            stopovers.push({_id: stopoverId, lat: stopover.lat, long: stopover.long, name: stopover.name, days: stopover.days});\r\n        }\r\n\r\n        return stopovers;\r\n    };\r\n\r\n    saveChanges = async () => {\r\n        let stopoversSaved = [...this.state.updatedStopovers];\r\n        this.setState({...this.state, updatedStopovers: [], autosaveTimeout: null});\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const body = {\r\n            name: this.state.selectedTrip.name,\r\n            from: this.state.selectedTrip.from,\r\n            stopovers: this.getUpdatedStopovers(stopoversSaved) \r\n        };\r\n    \r\n        try {\r\n            await axios.put(`http://localhost:4000/api/trip/${this.state.selectedTrip._id}`, body, config);\r\n            this.props.setTrip(this.state.selectedTrip);\r\n        }\r\n        catch (err) {\r\n            this.props.showNotification({\r\n                type: \"toast\",\r\n                contentType: \"error\",\r\n                text: \"An error occured while trying to save destination data\",\r\n                time: 2.5\r\n            });\r\n            console.error(\"An error occured while trying to save destination data\");\r\n            console.log(err);\r\n            this.setState({...this.state, updatedStopovers: [...new Set([...this.state.updatedStopovers, ...stopoversSaved])]});\r\n        }\r\n    };\r\n\r\n    handleDeleteTrip = async () => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        let tripId = this.state.selectedTrip._id;\r\n    \r\n        try {\r\n            await axios.delete(`http://localhost:4000/api/trip/${tripId}`, config);\r\n\r\n            this.setState({...this.state, selectedTrip: null});\r\n            this.props.setTrips(this.props.trips.filter(el => el._id !== tripId));\r\n        }\r\n        catch (err) {\r\n            this.props.showNotification({\r\n                type: \"toast\",\r\n                contentType: \"error\",\r\n                text: \"An error occured while trying to delete a trip\",\r\n                time: 2.5\r\n            });\r\n            console.error(\"An error occured while trying to delete a trip\");\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    handleDeleteDestination = async destinationId => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    \r\n        try {\r\n            let res = await axios.delete(`http://localhost:4000/api/trip/${this.state.selectedTrip._id}/stopover/${destinationId}`, config);\r\n\r\n            let trip = this.props.trips.find(el => el._id === this.state.selectedTrip._id);\r\n\r\n            this.props.setTrip({ ...trip, stopovers: trip.stopovers.filter(el => el._id !== destinationId), segments: res.data });\r\n            this.setState({...this.state, selectedTrip: { ...this.state.selectedTrip, stopovers: this.state.selectedTrip.stopovers.filter(el => el._id !== destinationId), segments: res.data }});\r\n        }\r\n        catch (err) {\r\n            this.props.showNotification({\r\n                type: \"toast\",\r\n                contentType: \"error\",\r\n                text: \"An error occured while trying to delete a destination\",\r\n                time: 2.5\r\n            });\r\n            console.error(\"An error occured while trying to delete a destination\");\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    handleAddTrip = type => {\r\n        if (type === \"custom\") {\r\n            this.addCustomTrip();\r\n        }\r\n        else {\r\n            this.setState({...this.state, showingGeneration: true });\r\n        }\r\n    };\r\n\r\n    handleGenerateTrip = data => {\r\n        if (data.name === \"\" || data.country === \"\" || data.from === \"\" || data.to === \"\") {\r\n            this.props.showNotification({\r\n                type: \"toast\",\r\n                contentType: \"error\",\r\n                text: \"Please fill out all fields\",\r\n                time: 1.5\r\n            });\r\n            return;\r\n        }\r\n        else if (data.activities.length === 0) {\r\n            this.props.showNotification({\r\n                type: \"toast\",\r\n                contentType: \"error\",\r\n                text: \"Select at least 1 activity\",\r\n                time: 1.5\r\n            });\r\n            return;\r\n        }\r\n        else if (data.to < data.from) {\r\n            this.props.showNotification({\r\n                type: \"toast\",\r\n                contentType: \"error\",\r\n                text: \"This app unfortunately doesn't support time travel\",\r\n                time: 1.5\r\n            });\r\n            return;\r\n        }\r\n\r\n        let days = daysBetween(data.from, data.to);\r\n        let destinations = this.props.destinations.filter(el => el.country === data.country).filter(el => {\r\n            for (let activity of data.activities) {\r\n                if (el.tags.includes(activity)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n\r\n        destinations = shuffleArray(destinations);\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.isAuthenticated) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        else if (isEmpty(this.props.user)) {\r\n            return <Loader />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"home--nav\">\r\n                    <Button onClick={() => this.props.history.push(\"/destinations\")} className=\"home--nav--button\">\r\n                        Destinations\r\n                    </Button>\r\n                    <AccountDropdown saveUserData={this.props.saveUserData} user={this.props.user} />\r\n                </div>\r\n                <TripGeneration showing={this.state.showingGeneration} countries={this.props.countries} onSubmit={this.handleGenerateTrip} onClose={() => this.setState({...this.state, showingGeneration: false })} />          \r\n                <MapChart onCenterChange={latlang => this.setState({...this.state, center: latlang})} handleDragMarker={this.handleDragMarker} trip={this.state.selectedTrip} />\r\n                <Logo background=\"white\" className=\"home--logo\" />\r\n\r\n                <div className=\"home--trips\">\r\n                    <Dropdown selectedOption={this.state.selectedTrip ? this.state.selectedTrip._id : null} selectedClassName=\"home--trips--dropdown--selected\" className=\"home--trips--dropdown\" onSelect={tripID => this.setState({...this.state, selectedTrip: this.props.trips.find(el => el._id === tripID)})} options={this.props.trips.map(el => ({key: el._id, text: el.name}))}>\r\n                        Select a trip\r\n                    </Dropdown>\r\n                    <Dropdown noOpenIcon={true} staticButton={true} onSelect={opt => this.handleAddTrip(opt)} options={[{ text: \"Custom\", key: \"custom\", icon: \"pin-outline\" }, { text: \"Generated\", key: \"generated\", icon: \"hardware-chip-outline\" }]} className=\"home--trips--add\" hintText=\"Add trip\">\r\n                        <IonIcon icon=\"add-outline\" />\r\n                    </Dropdown>\r\n                </div>\r\n\r\n                <Sidebar history={this.props.history} handleAddDestination={this.handleAddDestination} handleDeleteDestination={this.handleDeleteDestination} handleTripChange={this.handleTripChange} handleDeleteTrip={this.handleDeleteTrip} trip={this.state.selectedTrip} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","F:\\Projekti\\Journey\\front-end\\src\\containers\\Home\\Sidebar.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\Home\\AccountDropdown.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Map\\MapEvents.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\Home\\Destination.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\Trip\\Trip.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Forms\\CalendarInput.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Utils\\Calendar.js",[],"F:\\Projekti\\Journey\\front-end\\src\\Countries.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\Trip\\CountryInfo.js",[],"F:\\Projekti\\Journey\\front-end\\src\\components\\Utils\\Info.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\Home\\TripGeneration.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\Destinations\\Destinations.js",[],"F:\\Projekti\\Journey\\front-end\\src\\containers\\Destinations\\AddDestinationPopup.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":3,"column":62,"nodeType":"171","messageId":"172","endLine":3,"endColumn":67},{"ruleId":"169","severity":1,"message":"173","line":292,"column":13,"nodeType":"171","messageId":"172","endLine":292,"endColumn":17},{"ruleId":"169","severity":1,"message":"174","line":302,"column":37,"nodeType":"171","messageId":"172","endLine":302,"endColumn":49},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'Popup' is defined but never used.","Identifier","unusedVar","'days' is assigned a value but never used.","'destinations' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]